import java.util.*;

public class Main {
    static final String[] SYMBOLS = {"üçí", "üçã", "ü•≠", "üèÜ", "‚öì"};
    static final Map<String, int[]> PAYOUTS = Map.of(
        "üçí", new int[]{3, 2},
        "üçã", new int[]{4, 3},
        "ü•≠", new int[]{5, 4},
        "üèÜ", new int[]{10, 5},
        "‚öì", new int[]{100, 6}
    );

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();
        int balance = 100;

        System.out.println("üé∞ –í—ñ—Ç–∞—î–º–æ —É –≥—Ä—ñ –°–ª–æ—Ç-–º–∞—à–∏–Ω–∞!");
        System.out.println("–î–æ—Å—Ç—É–ø–Ω—ñ —Å–∏–º–≤–æ–ª–∏: üçí, üçã, ü•≠, üèÜ, ‚öì");
        System.out.println("–ü–æ—á–∞—Ç–∫–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: $100\n");

        while (balance > 0) {
            System.out.printf("–í–∞—à –±–∞–ª–∞–Ω—Å: $%d%n", balance);
            System.out.print("–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É —Å—Ç–∞–≤–∫–∏: ");

            int bet = scanner.nextInt();
            if (bet <= 0) {
                System.out.println("–°—Ç–∞–≤–∫–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –±—ñ–ª—å—à–æ—é –∑–∞ 0.\n");
                continue;
            } else if (bet > balance) {
                System.out.println("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤.\n");
                continue;
            }

            balance -= bet;
            String[] result = spinRow(random);
            printRow(result);
            int payout = getPayout(result, bet);
            if (payout > 0) {
                balance += payout;
                System.out.printf("üéâ –í–∏ –≤–∏–≥—Ä–∞–ª–∏: $%d%n", payout);
            } else {
                System.out.println("üôÅ –í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏.");
            }

            if (balance == 0) {
                System.out.println("–í–∞—à –±–∞–ª–∞–Ω—Å –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é. –ì—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
                break;
            }

            System.out.print("–ë–∞–∂–∞—î—Ç–µ –∑—ñ–≥—Ä–∞—Ç–∏ —â–µ —Ä–∞–∑? (Y/N): ");
            String choice = scanner.next().toLowerCase();
            if (!choice.equals("y")) break;
            System.out.println();
        }

        System.out.println("–î—è–∫—É—î–º–æ –∑–∞ –≥—Ä—É!");
        scanner.close();
    }

    static String[] spinRow(Random random) {
        String[] result = new String[3];
        for (int i = 0; i < 3; i++) {
            result[i] = SYMBOLS[random.nextInt(SYMBOLS.length)];
        }
        return result;
    }

    static void printRow(String[] row) {
        System.out.println("**************************");
        System.out.printf("  %s | %s | %s%n", row[0], row[1], row[2]);
        System.out.println("**************************");
    }

    static int getPayout(String[] row, int bet) {
        if (row[0].equals(row[1]) && row[1].equals(row[2])) {
            return bet * PAYOUTS.get(row[0])[0];
        } else if (row[0].equals(row[1]) || row[0].equals(row[2])) {
            return bet * PAYOUTS.get(row[0])[1];
        } else if (row[1].equals(row[2])) {
            return bet * PAYOUTS.get(row[1])[1];
        }
        return 0;
    }
}
